services:
  app:
    container_name: auth
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${GRPC_PORT}:50051"
    env_file: .env
    environment:
      - CONFIG_PATH=/app/.env
    volumes:
      - auth_mod_cache:/go/pkg/mod
      - ./:/app
    networks:
      - backend-network
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  migrate:
    container_name: auth-migrate
    image: migrate/migrate:v4.18.2
    volumes:
      - ./migrations:/migrations
    command:
      -path=./migrations
      -database=postgres://${DB_USER}:${DB_PASSWORD}@auth-postgres:5432/${DB_NAME}?sslmode=disable
      up
    networks:
      - backend-network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: auth-postgres
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - auth_pg_data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  auth_pg_data:
  auth_mod_cache:

networks:
  backend-network:
    name: backend-network
    external: true
